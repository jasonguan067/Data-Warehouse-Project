-- Explore All Objects in database
SELECT * FROM INFORMATION_SCHEMA.TABLES

--Explore All Columns in database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

--Explore All Countries customers come from
SELECT DISTINCT country from gold.dim_customers

--Explore product information
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3

--find the date of the first and last order
SELECT MIN(order_date) first_order_date, MAX(order_date) as last_order_date,
DATEDIFF(month, MIN(order_date), MAX(order_date)) as order_range_months
FROM gold.fact_sales

--find the youngest and oldest customer
SELECT MIN(birthdate) as oldest_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) as oldest_age,
MAX(birthdate) as youngest_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) as youngest_age
FROM gold.dim_customers

--find total sales
SELECT SUM(sales_amount) as total_sales FROM gold.fact_sales

--find how many items are sold
SELECT SUM(quantity) as total_quantity FROM gold.fact_sales

--find the average selling price
SELECT AVG(price) as avg_price FROM gold.fact_sales

--find the total number of orders
SELECT COUNT(order_number) as total_orders from gold.fact_sales
SELECT COUNT(DISTINCT order_number) as total_orders from gold.fact_sales
SELECT * FROM gold.fact_sales

--find the total number of products
SELECT COUNT(product_name) as total_products from gold.dim_products
SELECT COUNT(DISTINCT product_name) AS total_products from gold.dim_products

--find the total number of customers
SELECT COUNT(customer_key) as total_customers FROM gold.dim_customers

--find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) as total_customers FROM gold.fact_sales

--Generate a report that shows all key metrics of the business
SELECT 'Total Sales' as measure_name, SUM(sales_amount) as measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total NR Orders', COUNT(Distinct order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total NR Products', COUNT(product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total NR Customers', COUNT(customer_key) FROM gold.dim_customers

--find total customers by countries
SELECT country, COUNT(customer_key) as total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

--find total customers by gender
SELECT gender, COUNT(customer_key) as total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

--find total products by category

SELECT category, COUNT(product_key) as total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

--average cost in each category
SELECT category, AVG(cost) as avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC

-- what is the total revenue generated for each category?
SELECT p.category, SUM(f.sales_amount) as total_revenue FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.category
order by total_revenue desc;

--what is the total revenue generated by each customer
SELECT c.customer_key, c.first_name, c.last_name, SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name

--What is the distribution of sold items across countries
SELECT c.country, SUM(f.quantity) as total_sold_items
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY c.country 
ORDER BY total_sold_items DESC

--Which 5 products generate the highest revenue?
SELECT TOP 5 p.product_name, SUM(f.sales_amount) as total_revenue FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc;

SELECT * FROM(
SELECT TOP 5 p.product_name, SUM(f.sales_amount) as total_revenue, ROW_NUMBER() OVER (Order by sum(f.sales_amount) DESC) as rank_products
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc) as t
WHERE rank_products <= 5


--Which 5 products generate the lowest revenue
SELECT TOP 5 p.product_name, SUM(f.sales_amount) as total_revenue FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue asc;

--find top 10 customers who have gneerated the highest revenue
SELECT TOP 10 c.customer_key, c.first_name, c.last_name, SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY SUM(f.sales_amount) desc;

--find top 3 customers with fewest orders placed
SELECT TOP 3 c.customer_key, c.first_name, c.last_name, COUNT(DISTINCT order_number) as order_count
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY order_count ASC;
